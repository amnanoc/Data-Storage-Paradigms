SELECT TO_CHAR(TimeSlot, 'Month') AS Month, EXTRACT(YEAR FROM TimeSlot) AS Year, COUNT(*) AS Total, SUM(CASE WHEN LessonType = 'individual' THEN 1 ELSE 0 END) AS Individual, SUM(CASE WHEN LessonType = 'group' THEN 1 ELSE 0 END) AS Group, SUM(CASE WHEN LessonType = 'ensemble' THEN 1 ELSE 0 END) AS Ensemble FROM Lesson WHERE EXTRACT(YEAR FROM TimeSlot) = 2023 GROUP BY Month, Year;

SELECT CASE WHEN SiblingCount = 0 THEN 'No Sibling' WHEN SiblingCount = 1 THEN 'One Sibling' ELSE 'Two or More Siblings' END AS NoOfSiblings, COUNT(*) AS NoOfStudents FROM (SELECT StudentID, COUNT(SiblingStudentID) AS SiblingCount FROM StudentSiblings GROUP BY StudentID) AS StudentSiblingsCount GROUP BY NoOfSiblings;

SELECT Instructor.InstructorID, Instructor.Name, COUNT(*) AS NoOfLessons FROM Lesson JOIN Instructor ON Lesson.InstructorID = Instructor.InstructorID WHERE EXTRACT(MONTH FROM Lesson.TimeSlot) = EXTRACT(MONTH FROM CURRENT_DATE) AND EXTRACT(YEAR FROM Lesson.TimeSlot) = EXTRACT(YEAR FROM CURRENT_DATE) GROUP BY Instructor.InstructorID, Instructor.Name HAVING COUNT(*) > 10 ORDER BY COUNT(*) DESC;

SELECT l.TimeSlot::DATE AS Day, l.TargetGenre AS Genre, CASE WHEN COALESCE(COUNT(la.StudentID), 0) >= l.MaxStudents THEN 'Full Booked' WHEN COALESCE(COUNT(la.StudentID), 0) < l.MaxStudents AND COALESCE(COUNT(la.StudentID), 0) >= l.MaxStudents - 2 THEN '1-2 Seats Left' ELSE 'More Seats Left' END AS "No of Free Seats" FROM Lesson l LEFT JOIN LessonAttendance la ON l.LessonID = la.LessonID WHERE l.LessonType = 'ensemble' AND l.TimeSlot BETWEEN CURRENT_DATE AND (CURRENT_DATE + INTERVAL '7 days' - '1 second'::INTERVAL) GROUP BY l.LessonID, l.TimeSlot, l.TargetGenre, l.MaxStudents ORDER BY l.TimeSlot::DATE, l.TargetGenre;